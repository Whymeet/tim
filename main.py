from post_loader import load_posts
from vk_screenshot import batch_screenshots
from ads_screenshot import screenshot_group_stats
from report_generator import generate_report
import os


def main() -> None:
    """–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –∑–∞–≥—Ä—É–∂–∞–µ–º XLSX, –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—ã –ø–æ—Å—Ç–æ–≤ –∏ VK Ads, —Ñ–æ—Ä–º–∏—Ä—É–µ–º Word‚Äë–æ—Ç—á—ë—Ç."""

    posts_file = "posts.xlsx"
    output_dir = "assets"
    output_doc = "–û—Ç—á–µ—Ç.docx"
    ads_url = (
        "https://ads.vk.com/hq/dashboard/ad_groups"
        "?sudo=vkads_3012708486%40mailru"
        "&mode=ads&attribution=conversion"
        "&date_from=01.06.2025&date_to=18.08.2025"
        "&sort=-created"
    )

    os.makedirs(output_dir, exist_ok=True)
    print(f"üìÅ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {output_dir}")

    print("‚è≥ –ß–∏—Ç–∞—é —Ç–∞–±–ª–∏—Ü—É‚Ä¶")
    posts = load_posts(posts_file)
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(posts)} —Å—Ç—Ä–æ–∫ / —Å—Å—ã–ª–æ–∫")

    print("üì∏ –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—ã –ø–æ—Å—Ç–æ–≤‚Ä¶")
    batch_screenshots(posts, output_dir)
    print("‚úÖ –°–∫—Ä–∏–Ω—ã –ø–æ—Å—Ç–æ–≤ –≥–æ—Ç–æ–≤—ã")

    done_groups: set[str] = set()
    for idx, post in enumerate(posts, 1):
        group_name = (post.get("–ì—Ä—É–ø–ø–∞") or post.get("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞") or "").upper()
        if not group_name or group_name in done_groups:
            continue

        print(f"üìä [{idx}/{len(posts)}] VK Ads –¥–ª—è –≥—Ä—É–ø–ø—ã '{group_name}'‚Ä¶")
        try:
            screenshot_group_stats(
                group_name, 
                output_dir, 
                ads_url,
                demography_zoom=0.6,  # –°–∏–ª—å–Ω–æ —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –º–∞—Å—à—Ç–∞–± –¥–ª—è –¥–µ–º–æ–≥—Ä–∞—Ñ–∏–∏
                geo_zoom=0.7,         # –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –º–∞—Å—à—Ç–∞–± –¥–ª—è –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏ (–±—ã–ª–æ 0.8)
                viewport_width=1920,
                viewport_height=1200
            )
            done_groups.add(group_name)
            print("   ‚úÖ –ì–æ—Ç–æ–≤–æ")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  –ù–µ –≤—ã—à–ª–æ: {e}")

    print("üìù –°–æ–±–∏—Ä–∞—é DOCX‚Ä¶")
    try:
        generate_report(posts, output_doc, assets_dir=output_dir, inner_image="inner.png")
    except TypeError:
        # Fallback –¥–ª—è —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏
        generate_report(posts, output_doc)

    print("‚úÖ –û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤!")


if __name__ == "__main__":
    main()

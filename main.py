from post_loader import load_posts
from vk_screenshot import batch_screenshots
from ads_screenshot import screenshot_group_stats
from report_generator import generate_report
import os


def main() -> None:
    """Entry‚Äëpoint: makes screenshots & assembles Word report."""

    posts_file   = "posts.xlsx"            # —Ç–∞–±–ª–∏—Ü–∞ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏
    output_dir   = "assets"                # –∫—É–¥–∞ –∫–ª–∞–¥—ë–º PNG‚Äë–∏
    output_doc   = "–û—Ç—á–µ—Ç.docx"            # –∏—Ç–æ–≥–æ–≤—ã–π DOCX
    ads_url      = (
        "https://ads.vk.com/hq/dashboard/ad_plans"
        "?sudo=vkads_3012708486%40mailru"
        "&mode=ads&attribution=conversion"
        "&date_from=01.04.2025&date_to=04.05.2025"
        "&sort=-created"
    )
    ad_plan_name = "–ü—Ä–æ_–†–æ–≥–æ–≤—Å–∫–æ–µ"         # —Ç–æ—á–Ω–æ–µ –∏–º—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–ª–∞–Ω–∞

    # ensure workspace exists -------------------------------------------------
    os.makedirs(output_dir, exist_ok=True)
    print(f"üìÅ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {output_dir}")

    try:
        print("üìã –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞‚Ä¶")
        posts = load_posts(posts_file)
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")

        print("üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–æ—Å—Ç–æ–≤‚Ä¶")
        batch_screenshots(posts, output_dir)
        print("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –ø–æ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω—ã")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ –≤—Å—ë –µ—â—ë —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not os.path.exists(output_dir):
            print(f"‚ö†Ô∏è  –ü–∞–ø–∫–∞ {output_dir} –∏—Å—á–µ–∑–ª–∞, —Å–æ–∑–¥–∞—ë–º –∑–∞–Ω–æ–≤–æ")
            os.makedirs(output_dir, exist_ok=True)
        
        print("üìä –°—ä—ë–º–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ VK Ads‚Ä¶")
        screenshot_group_stats(ad_plan_name, output_dir, ads_url)
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ VK Ads –ø–æ–ª—É—á–µ–Ω–∞")

        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏
        if not os.path.exists(output_dir):
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ø–∞–ø–∫–∞ {output_dir} —É–¥–∞–ª–µ–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã")
            os.makedirs(output_dir, exist_ok=True)
            print(f"üìÅ –ü–∞–ø–∫–∞ {output_dir} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

        print("üìÑ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞‚Ä¶")
        generate_report(posts, output_doc, assets_dir=output_dir)
        print("‚úÖ –û—Ç—á—ë—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")

        print(f"üéâ –ì–æ—Ç–æ–≤–æ! –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ {output_doc}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ assets
        if os.path.exists(output_dir):
            files = os.listdir(output_dir)
            print(f"üìÅ –§–∞–π–ª—ã –≤ {output_dir}: {len(files)} —à—Ç.")
            for f in sorted(files):
                print(f"  - {f}")
        else:
            print(f"‚ùå –ü–∞–ø–∫–∞ {output_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞–ø–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        if os.path.exists(output_dir):
            files = os.listdir(output_dir)  
            print(f"üìÅ –§–∞–π–ª—ã –≤ {output_dir} –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏: {files}")
        else:
            print(f"üìÅ –ü–∞–ø–∫–∞ {output_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏")
        raise


if __name__ == "__main__":
    main()